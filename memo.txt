・仮想環境 .venv


・discord.pyをインストール
    $ pip install discord.py


・requirements.txtに書き出し
    $ pip freeze > requirements.txt
    $ pip install -r requirements.txt


・from <package> import <module> でインポート
    import <module>の場合もある。
    from discord.ext import commands の場合はdiscord.extパッケージ内のcommandsモジュールをインポート

・@bot.event == デコレーター


・git
    $ git init == リポジトリの作成
    .gitignoreに記載されたものは管理から外れる
    $ git status -s
    $ git add laucher.pyなどファイル名 == ステージング （Aになる）
    $ git add . で??をすべてステージング
    $ git reset でステージングをリセット
    $ git commit -m "コメント" == コミット
    $ git log == コミットのログを参照
    赤色のM == 変更があったことを示す。再度ステージング→コミットが必要
    緑色のM == ステージング完了
    $ git log //戻す対象のハッシュ値を調べる
    $ git reset --hard ハッシュ値 == そのコミットまで戻る。復元


・github
    まずはgithubでリポジトリ（リモートリポジトリ）を作成
    $ git remote add リモート名(originなど) https://github.com/<ユーザー名>/<プロジェクト名>.git で紐付け
    $ git push origin master == マスターへプッシュ
    $ git branch == ブランチ一覧 (masterのみ)
    $ git branch 新しいブランチ名 == 新しいブランチを作る
    $ git checkout ブランチ名 == ブランチへの移動


・herokuのセットアップ

    まずはHerokuアカウントを作成しましょう。

    次にアプリを作成しましょう。

    App name は discordbot-1ntegrale9 のような感じで適当に付けましょう。
    名前を入力したら Create App をクリックしましょう。
    Choose a region と Add to pipeline はそのままで大丈夫です。

    デプロイに必要なファイルの作成
    追加で以下の3つのファイルを用意してください。
    これらをbotのプログラムがあるディレクトリ直下に置いてください。

    よく分からなければ、こちらのテンプレートリポジトリを参考にしてください。
    https://github.com/DiscordBotPortalJP/discordpy-startup

    runtime.txt
    実行環境を記載します。

    runtime.txt
    python-3.8.2


    requirements.txt
    インストールする外部モジュールを記載します。

    requirements.txt
    discord.py

    Python, pipでrequirements.txtを使ってパッケージ一括インストール | note.nkmk.me

    Procfile
    プロセスと実行するコマンドを プロセス名: コマンド の形で記載します。

    Procfile
    discordbot: python discordbot.py

    プロセス名は discordbot 以外でも問題ありませんが、
    web や worker などの特殊な意味を持つプロセス名に注意してください。